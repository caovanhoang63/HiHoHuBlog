@page "/"
@using HiHoHuBlog.Components.Components
@using HiHoHuBlog.Modules.Blog.Presentation.Components
@using HiHoHuBlog.Modules.Search.Entity
@using HiHoHuBlog.Modules.Search.Service.Interface
@using HiHoHuBlog.Utils
@inject ISearchBlogService BlogSearch
@inject IToastService ToastService

@attribute [Authorize]
@attribute [AllowAnonymous]
<Container ContainerClass="flex justify-between space-x-10 max-w-7xl">
    <div class="grow max-w-4xl py-10">
        <div role="tablist" class="tabs tabs-bordered">
            <button class="tab">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.5v15m7.5-7.5h-15"/>
                </svg>
            </button>
            <a role="tab" class="tab">Tab 1</a>
            <a role="tab" class="tab tab-active">Tab 2</a>
            <a role="tab" class="tab">Tab 3</a>
            <a role="tab" class="tab">Tab 4</a>
        </div>
        @if (_blogs is not null)
        {
            @foreach (var blog in _blogs)
            {
                <BlogCard BlogSearchDoc="blog"/>

            }
        }
    </div>
    <div class="border-l-[1px] grow p-10 max-w-sm">
        <div class="flex flex-col space-y-2">
            <span class="text-black">Staff pick</span>
            <TinyBlogCard/>
            <TinyBlogCard/>
            <TinyBlogCard/>
        </div>
    </div>
</Container>

@code {

    private IRequester? _requester;
    [CascadingParameter]
    Task<AuthenticationState> authenticationStateTask { get; set; }

    private readonly Paging _paging = new Paging(1, 5);
    private int seed = 0;
    private IEnumerable<BlogSearchDoc>? _blogs;
    protected override async Task OnInitializedAsync()
    {
        _requester = await AuthUtils.GetInfo(authenticationStateTask);

        if (_requester is null)
        {
            seed = Guid.NewGuid().GetHashCode();
            var r = await BlogSearch.RandomBlog(seed, _paging);
            if (r.IsOk)
            {
                _blogs = r.Value;
            }
            else
            {
                ToastService.ShowError(r.Error.Message);
            }
        }
        else
        {
            // BlogSearch.RecommendSearchBlogByUser()
        }
       
    }

}