@page "/forgot-password"
@using HiHoHuBlog.Components.Layout
@using HiHoHuBlog.Modules.User.Service.Interface
@using HiHoHuBlog.Components.Components
@layout NonLayout
@inject NavigationManager NavigationManager 
@inject IToastService ToastService
@inject IResetPasswordService ResetPasswordService
<div class="h-screen flex">
    <FullScreenSpinner IsLoading="_isLoading"/>
    <div class="@(_step == 1 ? " " : "hidden") m-auto w-96 orm-control items-center  flex flex-col gap-2">
        <p class="font-bold text-2xl">Forgot password</p>
        <p class="text-center mb-10">
            Enter your email and we'll send you a link to reset your password
        </p>
        <InputText @bind-Value="@_email" type="email" class=" input input-bordered w-full" placeholder="Email"/>

        <input type="button" class="btn btn-primary w-full" value="Submit" @onclick="OnSubmit"/>
        <a class="link" href="/login">Back to login</a>
    </div>
    <div class="@(_step == 2 ? " " : "hidden") m-auto w-96 orm-control items-center  flex flex-col gap-4">
        <p class="font-bold text-2xl">Forgot password</p>
        <p class="text-center">
            We have sent you an email with a link to reset your password.
            Please check your email, including your spam folder, and follow the instructions.
            If you do not receive the email, please click the resend button.
        </p>


        <input type="button" class="btn btn-primary  w-52" value="Resend" @onclick="OnSubmit"/>
        <a class="link" href="/login">Back to login</a>
    </div>
</div>


@code {
    private string _email = "";
    private int _step = 1;
    private bool _isLoading = false;
    private async Task OnSubmit()
    {

        _isLoading = true;
        await InvokeAsync(StateHasChanged);
        var r = await ResetPasswordService.SendResetPassword(_email);
        if (r.IsOk)
        {
            ToastService.ShowSuccess("Send email success");
            _step = 2;
        }
        else
        {
            Console.WriteLine(r.Error);
            ToastService.ShowError(r.Error.Message);
        }
        _isLoading = false;
        await InvokeAsync(StateHasChanged);
    }
}