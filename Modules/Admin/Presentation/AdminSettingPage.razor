@page "/setting"
@using HiHoHuBlog.Components.Layout
@using HiHoHuBlog.Modules.Admin.Entity
@using HiHoHuBlog.Modules.Admin.Service.Interface
@using HiHoHuBlog.Modules.Email.Comp.MailSender
@using HiHoHuBlog.Modules.Email.Entity
@using HiHoHuBlog.Modules.Search.Service.Interface
@using HiHoHuBlog.Utils
@layout AdminLayout
@inject IReasonBlogBlockService Service
@attribute [Authorize]
@rendermode InteractiveServer
@inject IMigrationSearchDataService MigrateService
@inject IToastService ToastService
@inject IMailSender MailSender

<AuthorizeView Roles="admin, mod">
    <Authorized>
        <div class="p-5">
            <div>
                <h3 class="text-3xl font-bold">Setting</h3>
                <div class="py-10 space-x-5">
                    <input @bind="Reason" type="text" placeholder="Reason" class="input input-bordered w-80 max-w-xs "/>
                    <button @onclick="OnNewReason" class="btn ">
                    <span>
                        New block reason
                    </span>
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.5v15m7.5-7.5h-15"/>
                        </svg>
                    </button>
                </div>
            </div>

            <h3 class="text-2xl font-bold my-5 ">Search Migration</h3>
            <div>
                <button class="btn btn-primary " @onclick='OnMigrateBlogData'>
                    Migrate blog data
                </button>
                <button class="btn btn-primary " @onclick='OnMigrateTagData'>
                    Migrate tag data
                </button>
                <button class="btn btn-primary " @onclick='OnMigrateUserData'>
                    Migrate user data
                </button>
                <button class="btn btn-primary " @onclick='OnSendTestMail'>
                    Send Test Mail
                </button>
            </div>
        </div>
    </Authorized>
</AuthorizeView>
@code {
    [CascadingParameter] 
    Task<AuthenticationState> authenticationStateTask { get; set; }
    [Parameter] public string Reason { get; set; } = "";
    private IRequester? _requester = null;
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        _requester = await AuthUtils.GetInfo(authenticationStateTask);
    }

    private async void OnNewReason()
    {
        if (_requester == null) return;
         var r =  await Service.Create(_requester, new ReasonBlogBlockCreate
        {
            Message = Reason
        });

        if (!r.IsOk)
        {
            Console.WriteLine(r.Error);
            ToastService.ShowError(r.Error.Message);
            return;
        }
        ToastService.ShowSuccess("Success");
    }
    
    private async void OnMigrateBlogData()
    {
        var r = await MigrateService.MigrateBlogDataAsync();
        if (!r.IsOk)
        {
            Console.WriteLine(r.Error);
            ToastService.ShowError(r.Error.ToString());
            return;
        }
        Console.WriteLine("Success");
        ToastService.ShowSuccess("Success");
    }

    private  async Task OnMigrateTagData()
    {
        var r = await MigrateService.MigrateTagDataAsync();
        if (!r.IsOk)
        {
            Console.WriteLine(r.Error);
            ToastService.ShowError(r.Error.ToString());
            return;
        }
        Console.WriteLine("Success");
        ToastService.ShowSuccess("Success");
    }
    
    private  async Task OnMigrateUserData()
    {
        var r = await MigrateService.MigrateUserDataAsync();
        if (!r.IsOk)
        {
            Console.WriteLine(r.Error);
            ToastService.ShowError(r.Error.ToString());
            return;
        }
        Console.WriteLine("Success");
        ToastService.ShowSuccess("Success");
    }

    private async Task OnSendTestMail()
    {
        var r= await MailSender.Send(new MailRequest
        {
            toAddresses = new List<string>(){"caovanhoang204@gmail.com"},
            bodyText = "Xin chao c#",
            subject = "test",
            senderAddress = "no-reply@hihohu.site",
            bodyHtml = "<p>123</p>"
        });
        if (r.IsOk)
        {
            ToastService.ShowSuccess("SENDED");
        }
        else
        {
            Console.WriteLine(r.Error);
            ToastService.ShowError("SEND FAILT");
        }
    }
}