@page "/search"
@using HiHoHuBlog.Components.Components
@using HiHoHuBlog.Modules.Blog.Presentation.Components
@using HiHoHuBlog.Modules.Search.Entity
@using HiHoHuBlog.Modules.Search.Presentation.Components
@using HiHoHuBlog.Modules.Search.Service.Interface
@using HiHoHuBlog.Utils
@inject ISearchBlogService SearchBlogService
<Container ContainerClass="flex justify-between space-x-10 max-w-7xl">
    <div class="grow max-w-4xl py-10">
        <p>@SearchTerm</p>
        <div class="text-3xl font-bold ">
            <span class="text-gray-400">Result for </span>
            <span>@SearchTerm</span>
        </div>
        @*<span class="text-2xl font-bold">Results for asdasd</span>*@
        <div role="tablist" class="tabs mt-10 tabs-bordered">
            <input type="radio" name="my_tabs_1" role="tab" class="tab" aria-label="Stories" checked="@isActiveTab(0)"
                   @onchange="@(() => ChangeTab(0))"/>
            <div role="tabpanel" class="tab-content">
                @if (_searchDocs is not null)
                {
                    foreach (var blog in _searchDocs)
                    {
                        <BlogCard BlogSearchDoc="@blog"/>
                    }
                }
            </div>

            <input
                type="radio"
                name="my_tabs_1"
                role="tab"
                class="tab"
                aria-label="People"
                checked="@isActiveTab(1)"
                @onchange="@(() => ChangeTab(1))"/>
            <div role="tabpanel" class="tab-content">
                @*Row Children*@
                <MatchingPeopleCard/>
                <MatchingPeopleCard/>


            </div>

            <input type="radio" name="my_tabs_1" role="tab" class="tab" aria-label="Topics" checked="@isActiveTab(2)"
                   @onchange="@(() => ChangeTab(2))"/>
            <div role="tabpanel" class="tab-content mt-10">
                <div class="flex flex-wrap gap-2">
                    <div class="bg-gray-200 rounded-full px-4 py-2 mr-2 mb-2 cursor-pointer">Live</div>
                    <div class="bg-gray-200 rounded-full px-4 py-2 mr-2 mb-2 cursor-pointer">Live Streaming</div>
                    <div class="bg-gray-200 rounded-full px-4 py-2 mr-2 mb-2 cursor-pointer">Liverpool</div>
                    <div class="bg-gray-200 rounded-full px-4 py-2 mr-2 mb-2 cursor-pointer">Live Music</div>
                    <div class="bg-gray-200 rounded-full px-4 py-2 mr-2 mb-2 cursor-pointer">Livestream</div>
                    <div class="bg-gray-200 rounded-full px-4 py-2 mr-2 mb-2 cursor-pointer">Live Casino</div>
                    <div class="bg-gray-200 rounded-full px-4 py-2 mr-2 mb-2 cursor-pointer">Live</div>
                    <div class="bg-gray-200 rounded-full px-4 py-2 mr-2 mb-2 cursor-pointer">Live Streaming</div>
                    <div class="bg-gray-200 rounded-full px-4 py-2 mr-2 mb-2 cursor-pointer">Liverpool</div>
                    <div class="bg-gray-200 rounded-full px-4 py-2 mr-2 mb-2 cursor-pointer">Live Music</div>
                    <div class="bg-gray-200 rounded-full px-4 py-2 mr-2 mb-2 cursor-pointer">Livestream</div>
                    <div class="bg-gray-200 rounded-full px-4 py-2 mr-2 mb-2 cursor-pointer">Live Casino</div>
                    <div class="bg-gray-200 rounded-full px-4 py-2 mr-2 mb-2 cursor-pointer">Live</div>
                    <div class="bg-gray-200 rounded-full px-4 py-2 mr-2 mb-2 cursor-pointer">Live Streaming</div>
                    <div class="bg-gray-200 rounded-full px-4 py-2 mr-2 mb-2 cursor-pointer">Liverpool</div>
                    <div class="bg-gray-200 rounded-full px-4 py-2 mr-2 mb-2 cursor-pointer">Live Music</div>
                    <div class="bg-gray-200 rounded-full px-4 py-2 mr-2 mb-2 cursor-pointer">Livestream</div>
                    <div class="bg-gray-200 rounded-full px-4 py-2 mr-2 mb-2 cursor-pointer">Live Casino</div>
                </div>
            </div>
        </div>

    </div>
    <div class="border-l-[1px] grow p-10 max-w-sm">
        <div class="flex flex-col space-y-2">
            <span class="text-gray-600 mb-6">Topics matching @SearchTerm</span>
            <div class="flex flex-wrap ">
                <div class="bg-gray-200 rounded-full px-4 py-2 mr-2 mb-2 cursor-pointer">Live</div>
                <div class="bg-gray-200 rounded-full px-4 py-2 mr-2 mb-2 cursor-pointer">Live Streaming</div>
                <div class="bg-gray-200 rounded-full px-4 py-2 mr-2 mb-2 cursor-pointer">Liverpool</div>
                <div class="bg-gray-200 rounded-full px-4 py-2 mr-2 mb-2 cursor-pointer">Live Music</div>
                <div class="bg-gray-200 rounded-full px-4 py-2 mr-2 mb-2 cursor-pointer">Livestream</div>
                <div class="bg-gray-200 rounded-full px-4 py-2 mr-2 mb-2 cursor-pointer">Live Casino</div>
            </div>
            <a  class="text-green-500 hover:underline mb-2"  @onclick="() => ChangeTab(2)">See all</a>
            <div class="divider mt-9 mb-0"></div>
            <span class="text-gray-600 mb-6">Topics matching @SearchTerm</span>
            <div >
                <MatchingPeopleSmallCard></MatchingPeopleSmallCard>
                <MatchingPeopleSmallCard></MatchingPeopleSmallCard>
            </div>
            <a class="text-green-500 hover:underline mb-2 " @onclick="() => ChangeTab(1)">See all</a>

        </div>
    </div>
</Container>


@code {
    [SupplyParameterFromQuery(Name = "q")] string? SearchTerm { get; set; }
    private int activeTab = 0;
    private Paging Paging = new Paging(1, 10);
    private IEnumerable<BlogSearchDoc>? _searchDocs = new List<BlogSearchDoc>();

    // Chuyển từ OnInitializedAsync sang OnParametersSetAsync
    protected override async Task OnParametersSetAsync()
    {
        if (string.IsNullOrEmpty(SearchTerm))
        {
            SearchTerm = "";
        }

        // Gọi API tìm kiếm
        var result = await SearchBlogService.SearchBlog(SearchTerm, Paging);
        if (result.IsOk)
        {
            Console.WriteLine("Search result");
            foreach (var val in result.Value)
            {
                Console.WriteLine(val.Title);
            }
            _searchDocs = result.Value;
        }
        else
        {
            Console.WriteLine(result.Error);
            _searchDocs = new List<BlogSearchDoc>();
        }
    }

    private void ChangeTab(int tabIndex)
    {
        activeTab = tabIndex;
    }

    private bool isActiveTab(int tabIndex)
    {
        return activeTab == tabIndex;
    }
    
}