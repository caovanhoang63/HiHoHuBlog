@rendermode InteractiveServer
@inject NavigationManager NavigationManager
<div class="navbar border-b-[1px]">
    <div class="flex-1">
        <a @onclick='() => { NavigationManager.NavigateTo("/"); }' class="btn btn-ghost  text-xl">Hihohu</a>

        <label class="input input-bordered flex items-center gap-2 bg-white relative">
            <input type="text" class="grow" placeholder="Search" 
                   @bind="_searchQuery"
                   @onfocus="OpenDropdown"
                   @onblur="CloseDropdown"/>
            <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 16 16"
                fill="currentColor"
                class="h-4 w-4 opacity-70">
                <path
                    fill-rule="evenodd"
                    d="M9.965 11.026a5 5 0 1 1 1.06-1.06l2.755 2.754a.75.75 0 1 1-1.06 1.06l-2.755-2.754ZM10.5 7a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0Z"
                    clip-rule="evenodd"/>
            </svg>
            <!-- Dropdown kết quả -->
            @if (_isDropdownOpen)
            {
            <ul class="absolute top-full left-0 right-0 bg-white border border-gray-200 rounded shadow-lg mt-2 z-10">
                @foreach (var item in _searchHistory)
                {
                @if (item.Contains(_searchQuery, StringComparison.OrdinalIgnoreCase))
                {
                <li class="flex items-center justify-between px-4 py-2 hover:bg-gray-100 cursor-pointer">
                    <span>@item</span>
                    <!-- Nút X để xóa -->
                    <button
                        class=" hover:text-gray-500 ml-2"
                        @onclick="() => RemoveItem(item)">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M6 18 18 6M6 6l12 12" />
                        </svg>
                    </button>
                </li>
                }
                }
            </ul>
            }

        </label>
        
    </div>
    <div class="flex-none gap-2">
        <button @onclick="OnWrite" class="btn btn-ghost sm">
            <span>
                Write
            </span>
            <div>
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
                    <path stroke-linecap="round" stroke-linejoin="round" d="m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L10.582 16.07a4.5 4.5 0 0 1-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 0 1 1.13-1.897l8.932-8.931Zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0 1 15.75 21H5.25A2.25 2.25 0 0 1 3 18.75V8.25A2.25 2.25 0 0 1 5.25 6H10"/>
                </svg>
            </div>
        </button>
        <AuthorizeView>
            <Authorized>
                <div class="dropdown dropdown-end">
                    <div tabindex="0" role="button" class="btn btn-ghost btn-circle avatar">
                        <div class="w-10 rounded-full">
                            <img
                                alt="Tailwind CSS Navbar component"
                                src="https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp"/>
                        </div>
                    </div>
                    <ul
                        tabindex="0"
                        class="menu menu-sm dropdown-content bg-white rounded-box z-[1] mt-3 w-52 p-2 shadow">
                        <li>
                            <a href="/profile" class="justify-between">
                                Profile
                                <span class="">New</span>
                            </a>
                        </li>
                        <li>
                            <a>Settings</a>
                        </li>
                        <li>
                            <a href="/logout">Logout</a>
                        </li>
                    </ul>
                </div>
            </Authorized>
            <NotAuthorized>
                <a href="/login">Login</a>
            </NotAuthorized>
        </AuthorizeView>
        
    </div>
</div>


@code {
    private async  Task OnWrite()
    {
        Console.Write("Ok");
        NavigationManager.NavigateTo("/new-blog");
    }
    private string _searchQuery = string.Empty;
    private bool _isDropdownOpen = false;
    private void OpenDropdown()
    {
        _isDropdownOpen = true;
    }

    // Phương thức để đóng dropdown
    private void CloseDropdown()
    {
        _isDropdownOpen = false;
    }
    private void RemoveItem(string item)
    {
        _searchHistory.Remove(item);
    }
    // Giả lập dữ liệu lịch sử tìm kiếm
    private List<string> _searchHistory = new List<string>
    {
        "Twitch livestream",
        "Flutter mobile development",
        "ASP.NET Core tutorial",
        "Clean Architecture pattern",
        "Human-Computer Interaction"
    };
}
